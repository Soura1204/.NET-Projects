<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - RegistrationMVCApp</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />

    <style>
        :root {
            --sidebar-width: 230px;
            --sidebar-bg: linear-gradient(180deg, #0d6efd, #0056b3);
            --sidebar-hover: rgba(255, 255, 255, 0.15);
        }

        body {
            background-color: #f4f6f8;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }

        .content-wrapper {
            display: flex;
            flex: 1;
            transition: margin-left 0.3s ease;
        }

        /* Sidebar */
        .sidebar {
            width: var(--sidebar-width);
            background: var(--sidebar-bg);
            color: white;
            padding-top: 20px;
            position: fixed;
            top: 56px;
            left: 0;
            height: calc(100vh - 56px);
            box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
            z-index: 1001;
        }

            .sidebar.closed {
                transform: translateX(-100%);
            }

            .sidebar .sidebar-title {
                text-align: center;
                font-size: 1.2rem;
                font-weight: bold;
                margin-bottom: 20px;
                color: #ffffff;
            }

            .sidebar a {
                display: flex;
                align-items: center;
                gap: 10px;
                color: #e2e6ea;
                text-decoration: none;
                padding: 10px 15px;
                margin: 5px 10px;
                border-radius: 6px;
                transition: all 0.3s ease;
                font-weight: 500;
            }

                .sidebar a.active {
                    background-color: #ffffff;
                    color: #0d6efd;
                    font-weight: 600;
                }

                .sidebar a:hover {
                    background-color: var(--sidebar-hover);
                    color: #ffffff;
                }

                .sidebar a i {
                    font-size: 1.2rem;
                }

        /* Main Content */
        .main-content {
            flex-grow: 1;
            padding: 20px;
            margin-left: var(--sidebar-width);
            transition: margin-left 0.3s ease;
        }

        .content-wrapper.sidebar-closed .main-content {
            margin-left: 0;
        }

        /* Overlay for mobile */
        .sidebar-overlay {
            display: none;
            position: fixed;
            top: 56px;
            left: 0;
            width: 100%;
            height: calc(100vh - 56px);
            background: rgba(0, 0, 0, 0.4);
            z-index: 1000;
        }

            .sidebar-overlay.active {
                display: block;
            }

        footer {
            background-color: #0d6efd;
            color: #e2e6ea;
            padding: 1rem 0;
            text-align: center;
            font-size: 0.9rem;
        }

            footer a {
                color: #d1ecf1;
                text-decoration: none;
            }

                footer a:hover {
                    color: #ffffff;
                    text-decoration: underline;
                }

        /* Responsive */
        @@media (max-width: 992px) {
            .main-content {
                margin-left: 0;
            }

            .sidebar {
                transform: translateX(-100%);
            }

                .sidebar.open {
                    transform: translateX(0);
                }
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <header>
        <nav class="navbar navbar-expand-lg navbar-dark bg-primary shadow-sm">
            <div class="container-fluid">
                <!-- Sidebar Toggle Icon -->
                <button class="btn btn-outline-light me-2" id="sidebarToggle">
                    <i class="bi bi-list"></i>
                </button>
                <a class="navbar-brand fw-bold" asp-controller="Home" asp-action="Index">RegistrationMVCApp</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDropdown"
                        aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse justify-content-end" id="navbarNavDropdown">
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link @(ViewContext.RouteData.Values["action"]?.ToString() == "Index" ? "active text-light fw-bold" : "")"
                               asp-controller="Registration" asp-action="Index">Registration</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link @(ViewContext.RouteData.Values["action"]?.ToString() == "List" ? "active text-light fw-bold" : "")"
                               asp-controller="Registration" asp-action="List">List</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link @(ViewContext.RouteData.Values["action"]?.ToString() == "Search" ? "active text-light fw-bold" : "")"
                               asp-controller="Registration" asp-action="Search">Search</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <!-- Sidebar Overlay -->
    <div class="sidebar-overlay" id="sidebarOverlay"></div>

    <!-- Sidebar -->
    <div class="sidebar closed" id="sidebarMenu">
        <div class="sidebar-title">Menu</div>
        <a class="@(ViewContext.RouteData.Values["action"]?.ToString() == "Index" ? "active" : "")"
           asp-controller="Registration" asp-action="Index">
            <i class="bi bi-person-plus"></i> <span>Registration</span>
        </a>
        <a class="@(ViewContext.RouteData.Values["action"]?.ToString() == "List" ? "active" : "")"
           asp-controller="Registration" asp-action="List">
            <i class="bi bi-list-ul"></i> <span>List</span>
        </a>
        <a class="@(ViewContext.RouteData.Values["action"]?.ToString() == "Search" ? "active" : "")"
           asp-controller="Registration" asp-action="Search">
            <i class="bi bi-search"></i> <span>Search</span>
        </a>
    </div>

    <!-- Content -->
    <div class="content-wrapper" id="layoutWrapper">
        <div class="main-content">
            <main role="main" class="py-4">
                @RenderBody()
            </main>
        </div>
    </div>

    <!-- Footer -->
    <footer>
        <div class="container">
            &copy; 2025 - <strong>Sourajit Datta</strong> |
            <a href="https://github.com/Soura1204" target="_blank">GitHub</a>
        </div>
    </footer>

    <!-- Scripts -->
    <script>
        const sidebar = document.getElementById('sidebarMenu');
        const sidebarToggle = document.getElementById('sidebarToggle');
        const overlay = document.getElementById('sidebarOverlay');
        const layoutWrapper = document.getElementById('layoutWrapper');

        // Toggle sidebar
        sidebarToggle.addEventListener('click', (e) => {
            e.stopPropagation();
            if (window.innerWidth <= 992) {
                sidebar.classList.toggle('open');
                overlay.classList.toggle('active');
            } else {
                sidebar.classList.toggle('closed');
                layoutWrapper.classList.toggle('sidebar-closed');
            }
        });

        // Hide on overlay click
        overlay.addEventListener('click', () => {
            sidebar.classList.remove('open');
            overlay.classList.remove('active');
        });

        // Auto-close on outside click
        document.addEventListener('click', function (e) {
            const clickedInsideSidebar = sidebar.contains(e.target);
            const clickedToggle = sidebarToggle.contains(e.target);

            if (!clickedInsideSidebar && !clickedToggle) {
                if (window.innerWidth <= 992 && sidebar.classList.contains('open')) {
                    sidebar.classList.remove('open');
                    overlay.classList.remove('active');
                }
                if (window.innerWidth > 992 && !sidebar.classList.contains('closed')) {
                    sidebar.classList.add('closed');
                    layoutWrapper.classList.add('sidebar-closed');
                }
            }
        });
    </script>

    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
    @RenderSection("Scripts", required: false)
</body>
</html>
